#in_file is generated by samtools
import sys,re
in_file = sys.argv[1]
out_file = sys.argv[2]

# position/reads number/A/T/G/C/Isert/Delet

def get_indel(line,symbol):
	sta = 0
	temp = []
#	print(line)
	while line.find(symbol,sta) != -1:
		symbol_start = line.find(symbol,sta)
#		print(line)
		symbol_length = int(re.match("\d",line[line.find(symbol)+1:]).group())
		symbol_end = symbol_start + len(str(symbol_length)) + symbol_length
		full_symbol = line[ symbol_start:symbol_end + 1 ]

		formed_full_symbol = full_symbol.strip(symbol).strip("0123456789") +":"+ str(line.count(full_symbol))
#		print(formed_full_symbol)
		line = line.replace(full_symbol,"")
		sta += symbol_start
		temp.append(formed_full_symbol)
	else:
		return line,temp

def get_freq(line,base):
	freq = str(line.count(base))
	temp = base + ":" + freq
	return temp

# A/T/G/C/Isert/Delet
pos_dict = {}
out_temp = []
for line in open(in_file):
	line = line.upper()
	spa = line.split("\t")
	temp = ""
	if spa[3] == "0":
		out_temp.append( spa[1] + '\t' + spa[3] + '\t' + "A:0" +'\t'+ "T:0" +'\t'+ "G:0" +'\t'+ "C:0"  + '\t' +  "I:0" + '\t' + "*:0" )
	else:
		base_line = spa[4].replace("^~","").replace("$","").replace(",",".")
		if "+" not in base_line:
			base_line = base_line.replace(".",spa[2])
			out_temp.append( spa[1] + '\t' \
				+ spa[3] + '\t' \
				+ get_freq(base_line,"A") + '\t' \
				+ get_freq(base_line,"T") + '\t' \
				+ get_freq(base_line,"G") + '\t' \
				+ get_freq(base_line,"C") + '\t' \
				+ "I:0" + '\t' \
				+ get_freq(base_line,"*")
			)
		else:
			delet = get_indel(base_line,"-")
			base_line = delet[0]
			insert = get_indel(base_line,"+")
			base_line = insert[0]

			base_line = base_line.replace(".",spa[2])
#			print(delet[1] + insert[1])
			out_temp.append( spa[1] + '\t' \
				+ spa[3] + '\t' \
				+ get_freq(base_line,"A") + '\t' \
				+ get_freq(base_line,"T") + '\t' \
				+ get_freq(base_line,"G") + '\t' \
				+ get_freq(base_line,"C") + '\t' \
				+ ' '.join(insert[1]) + '\t' \
				+ get_freq(base_line,"*") \
			)

out = open(out_file,'w')
out.write("\n".join(out_temp))
out.close()
